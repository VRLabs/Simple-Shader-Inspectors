using UnityEditor;
using UnityEngine;

namespace VRLabs.SimpleShaderInspectors.Controls
{
    public class TextureControl : PropertyControl, IAdditionalProperties, IControlContainer
    {
        //..
        public AdditionalProperty[] AdditionalProperties { get; set; }
        //..

        public TextureControl(string propertyName, string extraPropertyName1 = null, string extraPropertyName2 = null) : base(propertyName)
        {
            AdditionalProperties = new AdditionalProperty[2];
            AdditionalProperties[0] = new AdditionalProperty(extraPropertyName1);
            if (!string.IsNullOrWhiteSpace(extraPropertyName1))
                HasExtra1 = true;
            
            AdditionalProperties[1] = new AdditionalProperty(extraPropertyName2);
            if (!string.IsNullOrWhiteSpace(extraPropertyName2))
                HasExtra2 = true;
            //..
        }
        
        protected void DrawTextureSingleLine(MaterialEditor materialEditor)
        {
            //..
            if (HasExtra2)
            {
                materialEditor.TexturePropertySingleLine(Content, Property, AdditionalProperties[0].Property, AdditionalProperties[1].Property);
            }
            else if (HasExtra1)
            {
                if (AdditionalProperties[0].Property.type == MaterialProperty.PropType.Color && HasHDRColor)
                    materialEditor.TexturePropertyWithHDRColorFixed(Content, Property, AdditionalProperties[0].Property, true);
                else
                    materialEditor.TexturePropertySingleLine(Content, Property, AdditionalProperties[0].Property);
            }
            else
            {
                materialEditor.TexturePropertySingleLine(Content, Property);
            }
            //..
        }
    }
}